{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const {\n      value\n    } = event.currentTarget;\n    event.currentTarget.name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const contactObj = (name, number) => {\n    return {\n      id: nanoid(),\n      name,\n      number\n    };\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = contactObj(name, number);\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.form__title,\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.form__container,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.form__label,\n        children: \"name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.form__input,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name  may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\",\n        required: true,\n        value: name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.form__label,\n        children: \"phone: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.form__input,\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: newContactPhone,\n        onChange: event => setNewContactPhone(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: css.form__btn,\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","css","nanoid","ContactForm","onSubmit","name","setName","number","setNumber","handleInputChange","event","value","currentTarget","contactObj","id","handleSubmit","preventDefault","contact","reset","form","form__title","form__container","form__label","form__input","newContactPhone","setNewContactPhone","target","form__btn"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport css from './ContactForm.module.css';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = event => {\r\n    const { value } = event.currentTarget;\r\n    event.currentTarget.name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const contactObj = (name, number) => {\r\n    return {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = contactObj(name, number);\r\n    onSubmit(contact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <form className={css.form} onSubmit={handleSubmit}>\r\n      <h2 className={css.form__title}>Phonebook</h2>\r\n      <div className={css.form__container}>\r\n        <p className={css.form__label}>name: </p>\r\n        <input\r\n          className={css.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name  may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <p className={css.form__label}>phone: </p>\r\n        <input\r\n          className={css.form__input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={newContactPhone}\r\n          onChange={event => setNewContactPhone(event.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={css.form__btn} type=\"submit\">\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}