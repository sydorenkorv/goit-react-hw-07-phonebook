{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\goit-react-hw-06-phonebook\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addItem } from '../../redux/contactSlice';\nimport { getContact, getFilterWord } from '../../redux/selectors';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactList/ContactList';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContact);\n  const filterWord = useSelector(getFilterWord);\n\n  const addContact = contactObj => {\n    const findContact = contacts.find(contact => contact.name.toLowerCase().includes(contactObj.name.toLowerCase()));\n    findContact ? toast.info(`${contactObj.name} is already in contact`) : dispatch(addItem(contactObj));\n  };\n\n  const isVisibleContacts = () => {\n    if (filterWord) {\n      const normalizeFilter = filterWord.toLowerCase();\n\n      if (contacts.length !== 0) {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter));\n      }\n    }\n\n    return contacts;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts,\n      handleDelete: handleDelete,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ei7Kx3dCZ7osJsMYct5IaG0d/OI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/components/App.jsx"],"names":["useSelector","useDispatch","addItem","getContact","getFilterWord","ContactForm","Filter","ContactList","nanoid","App","dispatch","contacts","filterWord","addContact","contactObj","findContact","find","contact","name","toLowerCase","includes","toast","info","isVisibleContacts","normalizeFilter","length","filter","setFilter","handleDelete"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,uBAA1C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,QAAQ,GAAGX,WAAW,CAACG,UAAD,CAA5B;AACA,QAAMS,UAAU,GAAGZ,WAAW,CAACI,aAAD,CAA9B;;AAEA,QAAMS,UAAU,GAAGC,UAAU,IAAI;AAC/B,UAAMC,WAAW,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,OAAO,IACvCA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,UAAU,CAACI,IAAX,CAAgBC,WAAhB,EAApC,CADkB,CAApB;AAGAJ,IAAAA,WAAW,GACPM,KAAK,CAACC,IAAN,CAAY,GAAER,UAAU,CAACI,IAAK,wBAA9B,CADO,GAEPR,QAAQ,CAACR,OAAO,CAACY,UAAD,CAAR,CAFZ;AAGD,GAPD;;AASA,QAAMS,iBAAiB,GAAG,MAAM;AAC9B,QAAIX,UAAJ,EAAgB;AACd,YAAMY,eAAe,GAAGZ,UAAU,CAACO,WAAX,EAAxB;;AAEA,UAAIR,QAAQ,CAACc,MAAT,KAAoB,CAAxB,EAA2B;AACzB,eAAOd,QAAQ,CAACe,MAAT,CAAgBT,OAAO,IAC5BA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCI,eAApC,CADK,CAAP;AAGD;AACF;;AACD,WAAOb,QAAP;AACD,GAXD;;AAaA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEa,MAAhB;AAAwB,MAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEhB,QADZ;AAEE,MAAA,YAAY,EAAEiB,YAFhB;AAGE,MAAA,MAAM,EAAEF;AAHV;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvCM;;GAAMjB,G;UACMR,W,EAEAD,W,EACEA,W;;;KAJRS,G","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { addItem } from '../../redux/contactSlice';\r\nimport { getContact, getFilterWord } from '../../redux/selectors';\r\nimport { ContactForm } from './ContactForm/ContactForm';\r\nimport { Filter } from './Filter/Filter';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(getContact);\r\n  const filterWord = useSelector(getFilterWord);\r\n\r\n  const addContact = contactObj => {\r\n    const findContact = contacts.find(contact =>\r\n      contact.name.toLowerCase().includes(contactObj.name.toLowerCase())\r\n    );\r\n    findContact\r\n      ? toast.info(`${contactObj.name} is already in contact`)\r\n      : dispatch(addItem(contactObj));\r\n  };\r\n\r\n  const isVisibleContacts = () => {\r\n    if (filterWord) {\r\n      const normalizeFilter = filterWord.toLowerCase();\r\n\r\n      if (contacts.length !== 0) {\r\n        return contacts.filter(contact =>\r\n          contact.name.toLowerCase().includes(normalizeFilter)\r\n        );\r\n      }\r\n    }\r\n    return contacts;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ContactForm onSubmit={addContact} />\r\n      <Filter filter={filter} setFilter={setFilter} />\r\n      <ContactList\r\n        contacts={contacts}\r\n        handleDelete={handleDelete}\r\n        filter={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}