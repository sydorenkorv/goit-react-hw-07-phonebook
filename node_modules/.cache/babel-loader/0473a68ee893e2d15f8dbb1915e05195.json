{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filterWord: ''\n  },\n  reducers: {\n    addItem(state, action) {\n      state.items = [action.payload, ...state.items];\n    },\n\n    deleteItem(state, action) {\n      state.items = state.items.filter(contact => contact.id !== action.payload);\n    },\n\n    filterItems(state, action) {\n      state.filterWord = action.payload;\n    }\n\n  }\n});\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  whitelist: ['items']\n};\nexport const contactReducer = persistReducer(persistConfig, contactSlice.reducer);\nexport const {\n  addItem,\n  deleteItem,\n  filterItems\n} = contactSlice.actions;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/contactSlice.js"],"names":["createSlice","persistReducer","storage","contactSlice","name","initialState","items","filterWord","reducers","addItem","state","action","payload","deleteItem","filter","contact","id","filterItems","persistConfig","key","whitelist","contactReducer","reducer","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,YAAY,GAAGH,WAAW,CAAC;AAC/BI,EAAAA,IAAI,EAAE,UADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,UAAU,EAAE;AAFA,GAFiB;AAM/BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACJ,KAAN,GAAc,CAACK,MAAM,CAACC,OAAR,EAAiB,GAAGF,KAAK,CAACJ,KAA1B,CAAd;AACD,KAHO;;AAIRO,IAAAA,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACxBD,MAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CACZC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACC,OADrB,CAAd;AAGD,KARO;;AASRK,IAAAA,WAAW,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACH,UAAN,GAAmBI,MAAM,CAACC,OAA1B;AACD;;AAXO;AANqB,CAAD,CAAhC;AAqBA,MAAMM,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,UADa;AAElBjB,EAAAA,OAFkB;AAGlBkB,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHO,CAAtB;AAMA,OAAO,MAAMC,cAAc,GAAGpB,cAAc,CACxCiB,aADwC,EAExCf,YAAY,CAACmB,OAF2B,CAArC;AAKP,OAAO,MAAM;AAAEb,EAAAA,OAAF;AAAWI,EAAAA,UAAX;AAAuBI,EAAAA;AAAvB,IAAuCd,YAAY,CAACoB,OAA1D","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filterWord: '',\r\n  },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      state.items = [action.payload, ...state.items];\r\n    },\r\n    deleteItem(state, action) {\r\n      state.items = state.items.filter(\r\n        contact => contact.id !== action.payload\r\n      );\r\n    },\r\n    filterItems(state, action) {\r\n      state.filterWord = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    whitelist: ['items'],\r\n};\r\n\r\nexport const contactReducer = persistReducer(\r\n    persistConfig,\r\n    contactSlice.reducer\r\n);\r\n\r\nexport const { addItem, deleteItem, filterItems } = contactSlice.actions;\r\n"]},"metadata":{},"sourceType":"module"}